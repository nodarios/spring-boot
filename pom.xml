<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cmp.sb</groupId>
    <artifactId>parent</artifactId>
    <version>3.0.0</version>
    <!-- <version>1.0-SNAPSHOT</version> -->
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <!-- lookup parent from repository -->
        <!--<relativePath />-->
    </parent>

    <modules>
        <module>myapp</module>
        <module>myapp-api</module>
        <module>rmi-server</module>
        <module>rmi-client</module>
        <module>rmi-api</module>
        <module>security</module>
        <module>graphql</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
    </properties>

    <!--
    <repositories>
        <repository>
            <id>confluent</id>
            <url>http://packages.confluent.io/maven/</url>
        </repository>
    </repositories>
    -->

    <!--
    <distributionManagement>
        <repository>
            <id>nexus-release</id>
            <name>nexus release</name>
            <url>http://NEXUS-DN/REPOSITORY/DIR</url>
        </repository>
        <snapshotRepository>
            <id>nexus-release</id>
            <name>nexus release</name>
            <url>http://NEXUS-DN/REPOSITORY/DIR4SNAPSHOT</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>
    -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- this is necessary as we're not using the Boot parent -->
                    <!--<mainClass>${start-class}</mainClass>-->
                </configuration>
            </plugin>
            <!-- for integration tests, variant 1 -->
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <!-- for integration tests, variant 2 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
    <dependencyManagement> allows to consolidate and centralize the management of dependencies.
    e.g. if you have different dependency versions, maven picks the highest if it can figure out what the highest is.
    If you don't like the version it picks, you can pick one yourself by declaring that dependency in the <dependencyManagement> section.
    -->
    
    <dependencies>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M5</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!-- see placeholder -->
    <!-- ${project.} -->

</project>
