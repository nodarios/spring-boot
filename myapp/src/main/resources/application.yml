dev:
  prop: hi

app:
  scheduler:
    enabled: false
    my-scheduler:
      enabled: false
      initial-delay: PT01S
      fixed-delay: PT03S
    kafka-scheduler:
      enabled: false
      initial-delay: PT01S
      fixed-delay: PT03S

spring:
#  profiles:
#    active: dev,dev2,dev3
  datasource:
    url: jdbc:postgresql://localhost:5443/mydb
    username: user
    password: pass
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate.ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        show_sql: true
        format_sql: true
#    defer-datasource-initialization: true
#  sql:
#    init:
#      mode: always
  cloud:
    function:
      definition: myEventConsumerProducer
    stream:
      kafka:
        binder:
          brokers: localhost:19092
          configuration:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
      bindings:
        myEventConsumerProducer-in-0:
          destination: my.event.ingress.topic
          group: my-event-group-01
          content-type: application/json
          consumer:
            concurrency: 1
        myEventConsumerProducer-out-0:
          destination: my.event.egress.topic
          content-type: application/json
  jmx:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: info,health,metrics,loggers,beans,mappings,jolokia
    jmx:
      exposure:
        include: info,health,metrics,loggers,beans,mappings,jolokia
  endpoint:
    health:
      show-details: always
  metrics:
    enable:
      all: false
      mm: true
    export:
      statsd:
        enabled: true
        host: ${DD_AGENT_HOST:localhost}
        port: ${DD_DOGSTATSD_PORT:8125}
        flavor: datadog

springdoc:
  packages-to-scan: pak.controllers
  paths-to-match: /db/my-ent*/**



#        ### H2DB
#        # in memory
#        spring.datasource.url=jdbc:h2:mem:db-myapp
#        # file based storage
#        #spring.datasource.url=jdbc:h2:file:~/spring-boot-h2-db-myapp
#        #spring.datasource.username=sa
#        #spring.datasource.password=
#        spring.datasource.driver-class-name=org.h2.Driver
#        spring.jpa.hibernate.ddl-auto=create
#        spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#        spring.jpa.defer-datasource-initialization=true
#        spring.h2.console.enabled=true
#        spring.h2.console.path=/h2

#        ### MySQL
#        #spring.datasource.url=jdbc:mysql://localhost:3306/db_example
#        #spring.datasource.username=user
#        #spring.datasource.password=pass
#        #spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#        #spring.jpa.hibernate.ddl-auto=update
#        #spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

#        ### MSSQL
#        #spring.datasource.url=jdbc:sqlserver://MSSQL_HOST:PORT;databaseName=db
#        #spring.datasource.username=user
#        #spring.datasource.password=pass
#        #spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#        #spring.jpa.hibernate.ddl-auto=none
#        #spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
#        ##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

#        ### devtools
#        # enable devtools to automatically restart app whenever files on the classpath change
#        spring.devtools.restart.enabled=false
#        # configure additional paths to automatically restart app when you make changes to files that are not on the classpath
#        #spring.devtools.restart.additional-paths=.
#        # automatically restart app only when the specified file changes
#        #spring.devtools.restart.trigger-file=restart
#        # enable LiveReload server to trigger a browser refresh when a change occurs
#        # also install "LiveReload" browser extension
#        spring.devtools.livereload.enabled=false
#        # p.s.
#        # but this restart does not compile and changes are not reflected, therefore:
#        # file -> settings -> build,execution,deployment. Go to -> compiler -> build project automatically
#        # Ctrl+Shift+A -> registry -> compiler.automake.allow.when.app.running

#        #spring.main.banner-mode=off

#        #server.port=8081
#        #server.shutdown=graceful

#        #spring.output.ansi.enabled=always

#        #spring.mvc.view.prefix=/WEB-INF/jsp/
#        #spring.mvc.view.suffix=.jsp

#        #logging.file.name=test-log.txt
#        #logging.level.org.springframework=DEBUG
#        #logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-6level)[%thread] [%logger] :: %msg%n
